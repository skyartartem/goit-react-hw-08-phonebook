{"version":3,"file":"static/js/691.6bdafb02.chunk.js","mappings":"sOACA,EAA0B,yBAA1B,EAA0D,sBAA1D,EAAyF,wB,SCG5EA,EAAU,SAAHC,GAA8B,IAAxBC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAMC,EAAMH,EAANG,OAC5BC,GAAWC,EAAAA,EAAAA,MAGjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYC,SAAA,EAC1BH,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAASC,SAAA,CAAEP,EAAK,QAC9BI,EAAAA,EAAAA,MAAA,QAAAG,SAAA,CAAM,KAAGN,MACTO,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASJ,UAAWC,EAAYI,QAN5B,WAAH,OAASR,GAASS,EAAAA,EAAAA,IAAcZ,GAAK,EAMgBQ,SAAC,aAK1E,ECjBaK,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAAQ,EAIhDC,EAAoB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAM,ECH/D,EAAuB,0BCIVC,EAAc,SAAHpB,GAAkB,IAAbqB,EAAMrB,EAANqB,OACrBL,GAAWM,EAAAA,EAAAA,IAAYJ,GAS7B,OACER,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAASC,SAPCO,EAASK,QAAO,SAAAE,GAAO,OAC9CA,EAAQrB,KAAKsB,cAAcC,SAASJ,EAAOG,cAAc,IAO7CE,KAAI,SAAAC,GAAA,IAAG1B,EAAE0B,EAAF1B,GAAIC,EAAIyB,EAAJzB,KAAMC,EAAMwB,EAANxB,OAAM,OACjCO,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACX,EAAO,CAACE,GAAIA,EAAIC,KAAMA,EAAMC,OAAQA,KAD9BF,EAEJ,KAIb,ECvBA,EAAuB,4BAAvB,EAA2D,6BAA3D,EAAiG,8B,UCMpF2B,EAAgB,WAC3B,IAAMxB,GAAWC,EAAAA,EAAAA,MACXW,GAAWM,EAAAA,EAAAA,IAAYJ,GAwB7B,OACEZ,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAUqB,SAvBR,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACT/B,EAAO8B,EAAKE,SAAShC,KAAKiC,MAC1BhC,EAAS6B,EAAKE,SAAS/B,OAAOgC,MACvB,KAATjC,GAA0B,KAAXC,EAMjBa,EAASoB,MACP,SAAAD,GAAK,OAAIA,EAAMjC,KAAKmC,sBAAwBnC,EAAKmC,mBAAmB,IAGtEC,EAAAA,GAAAA,MAAY,SAADC,OAAUrC,EAAI,6BAG3BE,GAASoC,EAAAA,EAAAA,IAAW,CAAEtC,KAAAA,EAAMC,OAAAA,KAC5B6B,EAAKS,SAbHH,EAAAA,GAAAA,MAAY,4CAchB,EAGoD7B,SAAA,EAChDH,EAAAA,EAAAA,MAAA,SAAAG,SAAA,CAAO,UACCC,EAAAA,EAAAA,KAAA,SAAOR,KAAK,OAAOK,UAAWC,QAEtCF,EAAAA,EAAAA,MAAA,SAAAG,SAAA,CAAO,YACGC,EAAAA,EAAAA,KAAA,SAAOR,KAAK,SAASS,KAAK,MAAMJ,UAAWC,QAGrDE,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASJ,UAAWC,EAAWC,SAAC,kBAKnD,EC9CA,EAAwB,sBCMXiC,EAAS,SAAH1C,GAAmC,IAA7BqB,EAAMrB,EAANqB,OAAQsB,EAAa3C,EAAb2C,cAI/B,OACErC,EAAAA,EAAAA,MAAAsC,EAAAA,SAAA,CAAAnC,SAAA,EACEH,EAAAA,EAAAA,MAAA,SAAAG,SAAA,EAAOC,EAAAA,EAAAA,KAAA,SAAM,mBAEXA,EAAAA,EAAAA,KAAA,SACEH,UAAWC,EACXqC,SAAUF,EACVR,MAAOd,EACPV,KAAK,OACLT,KAAK,eAITQ,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,WAGN,ECbe,SAASoC,IACtB,IAAM1C,GAAWC,EAAAA,EAAAA,MACX0C,GAAYzB,EAAAA,EAAAA,IAAYR,IAE9BkC,EAAAA,EAAAA,YAAU,WACR5C,GAAS6C,EAAAA,EAAAA,MACX,GAAG,CAAC7C,IAEJ,IAAA8C,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjC7B,EAAM+B,EAAA,GAAEE,EAASF,EAAA,GAMxB,OACE9C,EAAAA,EAAAA,MAAAsC,EAAAA,SAAA,CAAAnC,SAAA,EAUEC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,mBAEPC,EAAAA,EAAAA,KAACkB,EAAa,KACdlB,EAAAA,EAAAA,KAACgC,EAAM,CAACrB,OAAQA,EAAQsB,cAlBL,SAAAY,GACpBD,EAAUC,EAAItB,cAAcE,MAC9B,KAiBGzB,EAAAA,EAAAA,KAAA,OAAAD,SAAMsC,GAAa,4BACnBrC,EAAAA,EAAAA,KAACU,EAAW,CAACC,OAAQA,MAG3B,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactEditor/ContactEditor.module.css?ead8","components/ContactEditor/ContactEditor.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Contact_wrapper__K-zLN\",\"text\":\"Contact_text__Wq-3f\",\"button\":\"Contact_button__F+kJb\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from './Contact.module.css';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <div className={css.wrapper}>\n      <p className={css.text}>{name} </p>\n      <span>- {number}</span>\n      <button type=\"button\" className={css.button} onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n","export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import { useSelector } from 'react-redux';\nimport { Contact } from '../Contact/Contact';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport css from './ContactList.module.css';\n\nexport const ContactList = ({filter}) => {\n  const contacts = useSelector(selectAllContacts);\n\n  const filterFu = () => {\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    return filteredContacts;\n  };\n\n  return (\n    <ul className={css.list}>\n      {filterFu().map(({ id, name, number }) => (\n        <li key={id}>\n          <Contact id={id} name={name} number={number} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactEditor_form__U4ufl\",\"input\":\"ContactEditor_input__Nbns0\",\"button\":\"ContactEditor_button__yGZhk\"};","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport css from './ContactEditor.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { toast } from 'react-hot-toast';\n\nexport const ContactEditor = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    if (name === '' && number === '') {\n      toast.error('Contact cannot be empty. Enter some text!');\n      //  alert('Contact and number cannot be empty. Enter some name and number!');\n      return;\n    }\n    if (\n      contacts.some(\n        value => value.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n      )\n    ) {\n      toast.error(`Name -${name}- is alredy in contacts`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label>\n        Name: <input name=\"name\" className={css.input} />\n      </label>\n      <label>\n        Number: <input name=\"number\" type=\"tel\" className={css.input} />\n      </label>\n\n      <button type=\"submit\" className={css.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\"};","// import { useState } from 'react';\nimport css from './Filter.module.css';\nimport PropTypes from 'prop-types';\n// import { useSelector, useDispatch } from 'react-redux';\n\n// import { change} from '../../redux/filterSlice';\n\nexport const Filter = ({ filter, onChangeInput }) => {\n  // const query = useSelector(state => state.filter);\n  // const dispatch = useDispatch();\n \n  return (\n    <>\n      <label><hr />\n        Find contacts - \n        <input\n          className={css.input}\n          onChange={onChangeInput}\n          value={filter}\n          type=\"text\"\n          name=\"filter\"\n        />\n      \n      </label>\n      <br />\n      <br />\n    </>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChangeInput: PropTypes.func.isRequired,\n};","import {useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactEditor } from 'components/ContactEditor/ContactEditor';\n\n// import { ContactForm } from 'components/ContactForm/ContactForm';\n\n// import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n// import css from 'components/App.module.css';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const [filter, setFilter] = useState('');\n  \n   const onChangeInput = evt => {\n     setFilter(evt.currentTarget.value);\n   };\n\n  return (\n    <>\n      {/* <div className={css.conteiner}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div> */}\n\n      {/* <Helmet> */}\n      <title>Your Contacts</title>\n      {/* </Helmet> */}\n      <ContactEditor />\n      <Filter filter={filter} onChangeInput={onChangeInput} />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList filter={filter} />\n    </>\n  );\n}\n"],"names":["Contact","_ref","id","name","number","dispatch","useDispatch","_jsxs","className","css","children","_jsx","type","onClick","deleteContact","selectLoading","state","contacts","loading","selectAllContacts","items","ContactList","filter","useSelector","contact","toLowerCase","includes","map","_ref2","ContactEditor","onSubmit","e","preventDefault","form","currentTarget","elements","value","some","toLocaleLowerCase","toast","concat","addContact","reset","Filter","onChangeInput","_Fragment","onChange","Contacts","isLoading","useEffect","fetchContacts","_useState","useState","_useState2","_slicedToArray","setFilter","evt"],"sourceRoot":""}